/*
Covid 19 Data Exploration 10/08/2022
Skills used: Joins, Windows Functions, Aggregate Functions,Converting Data Types
*/

Select *
From public.coviddeaths
Where continent is not null 
order by 3,4


-- Select Data that we are going to be starting with

Select Location, date, total_cases, new_cases, total_deaths, population
From public.coviddeaths
Where continent is not null 
order by 1,2


-- Total Cases vs Total Deaths

Select Location, date, total_cases,total_deaths, round((total_deaths::numeric/total_cases::numeric),2)*100 as DeathPercentage
From public.coviddeaths
Where location like '%Colombia%'
and continent is not null 
order by 1,2


-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

Select Location, date, Population, total_cases,  round((total_cases::numeric/population::numeric)*100,2) as PercentPopulationInfected
From public.coviddeaths
order by 1,2


-- Countries with Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases) as HighestInfectionCount,  round(Max((total_cases::numeric/population::numeric))*100,2) as PercentPopulationInfected
From public.coviddeaths
Group by Location, Population
order by PercentPopulationInfected desc


-- Countries with Highest Death Count per Population

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From public.coviddeaths
where continent is not null
Group by continent
order by TotalDeathCount desc



-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From public.coviddeaths
Where continent is not null 
Group by continent
order by TotalDeathCount desc



-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From public.coviddeaths
where continent is not null 
order by 1,2



-- Looking total population vs vaccinations
Select dea.continent, dea.location, substring(dea.date::text,2,10)::date as date, dea.population, vac.new_vaccinations,
sum(vac.new_vaccinations::numeric) over (partition by dea.location order by dea.location, dea.date) as total_vaccinations
From public.coviddeaths dea
Join public.covidvaccinations vac
	On dea.location = vac.location
	and substring(dea.date::text,2,10)::date = vac.date
where dea.continent is not null
order by 2,3;

-- Looking the people vaccinated

with popvsvac as (
	Select dea.continent, dea.location, substring(dea.date::text,2,10)::date as date, dea.population, vac.new_vaccinations,
sum(vac.new_vaccinations::numeric) over (partition by dea.location order by dea.location, dea.date) as total_vaccinations
From public.coviddeaths dea
Join public.covidvaccinations vac
	On dea.location = vac.location
	and substring(dea.date::text,2,10)::date = vac.date
where dea.continent is not null
order by 2,3
)
select *,
round(total_vaccinations/population::numeric*100,2)
from popvsvac;
